package com.thread;
class ATM implements Runnable{
//class ATM extends Thread{
	private long depositeMoney = 10000;
	//지연, 경합, 순서대로........
	public void run() {
		for() {//지연처리
			
		}
	}
	//파라미터로 인출할 금액을 받는다.
	//전체 잔고에서 그 금액 차감
	//잔액을 출력
	//스레드 출력
	public void withDraw(long howMouch) {
		//잔고가 0보다 크니?
		System.out.println(Thread.currentThread().getName());
		//잔액을 반환하는 메소드의 리턴값으로 %d자리 채움
		System.out.printf("잔액 : %d원 %n", getDepositeMoney());
		//잔고가 0보다 작거나 요청 금액보다 작을때
		System.out.println("잔액이 부족합니다.");
	}
	//잔고를 가져오는 메소드 선언
	public long getDepositeMoney() {
		return depositeMoney;
	}
}
public class SynchronizedEx {

	public static void main(String[] args) {
		ATM atm = new ATM();
		//insert here - 엄마 와 아들 스레드 추가하기
		엄마 스레드 추가
		아들 스레드 추가
		mother.start();
		son.start();

	}

}
