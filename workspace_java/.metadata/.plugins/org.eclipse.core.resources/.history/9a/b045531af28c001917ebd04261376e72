package com.address;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.util.DBConnectionMgr;

public class AddressBookDao implements AddressBookInterface {
	java.sql.Connection 		con   = null;
	java.sql.PreparedStatement 	pstmt = null;
	java.sql.ResultSet          rs    = null;
	com.util.DBConnectionMgr    dbMgr = null;
	@Override
	public AddressVO getAddressDetail(AddressVO paVO) {
		System.out.println("DAO getAddressDetail호출 성공");
		return null;
	}

	@Override
	public AddressVO addresssInsert(AddressVO paVO) {
		System.out.println("DAO addresssInsert호출 성공");
		AddressVO raVO = new AddressVO();
		dbMgr=com.util.DBConnectionMgr.getInstance();
		StringBuilder sql = new StringBuilder();
		int status = 0;//0이면 입력 실패 , 1이면 입력 성공
		try {
			sql.append("INSERT INTO mkaddrtb(id, name, hp,gender,birthday");
	        sql.append("           ,comments,address,regdate)            ");
	        sql.append("      VALUES('haha','이성계'                       ");
	        sql.append("            ,'01055559999','1'                   ");
	        sql.append("            ,'2000-10-29','고교동창'               ");
	        sql.append("            ,'서울시 금천구 가산동'                    ");
	        sql.append("            ,TO_CHAR(sysdate,'YYYY-MM-DD'))		 ");
	        con = dbMgr.getConnection();
	        System.out.println("1");	        
	        pstmt = con.prepareStatement(sql.toString());
	        System.out.println("2");	        
	        status = pstmt.executeUpdate();
	        System.out.println("3");	        
	        System.out.println(status);
	        raVO.setStatus(status);//AddressVO status변수에 1저장
		} catch (SQLException se) {//ORA-XXXXX         
			System.out.println(se.toString());
			System.out.println(sql.toString());
		} catch (Exception e) {
			System.out.println(e.toString());
		}
		finally {
			dbMgr.freeConnection(con, pstmt);
		}
		return raVO;
	}

	@Override
	public AddressVO addresssUpdate(AddressVO paVO) {
		System.out.println("DAO addresssUpdate호출 성공");
		return null;
	}

	@Override
	public AddressVO addresssDelete(AddressVO paVO) {
		System.out.println("DAO addresssDelete호출 성공");
		return null;
	}
	/*
	 * public static void main(String args[]) { new
	 * AddressBookDao().addresssInsert(null); }
	 */

	@Override
	public List<AddressVO> getAddress() {
		//insert here
		//조회한 결과 n건을 담기 위한 객체 생성
		//테이블의 정보 계속 변한다. - 배열은 변하지 않으니깐....
		List<AddressVO> list = new ArrayList<AddressVO>();
		dbMgr = DBConnectionMgr.getInstance();
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT id, name, address, gender, hp ");
	    sql.append("      ,birthday, comments, regdate   ");
	    sql.append("  FROM mkaddrtb                      ");
	    try {
			con = dbMgr.getConnection();
			pstmt = con.prepareStatement(sql.toString());
			rs = pstmt.executeQuery();
			//rs.previous()쓰지 않는 이유는 오라클 커서가 항상 (디폴트) top에 있으니깐..list.
			AddressVO raVO = null;
			while(rs.next()) {
				raVO = new AddressVO();
				raVO.setId(rs.getString("id"));
				raVO.setName(rs.getString("id"));
				raVO.setAddress(rs.getString("id"));
				raVO.setGender(rs.getString("id"));
				raVO.setBirthday(rs.getString("id"));
				raVO.setHP(rs.getString("id"));
				raVO.setRegdate(rs.getString("id"));
				raVO.setComments(rs.getString("id"));
			}
		} catch (Exception e) {
			// TODO: handle exception
		} finally {//사용한 자원 반납하기 . con, pstmt, rs
			dbMgr.freeConnection(con, pstmt, rs);
		}
		return list;
	}
}








