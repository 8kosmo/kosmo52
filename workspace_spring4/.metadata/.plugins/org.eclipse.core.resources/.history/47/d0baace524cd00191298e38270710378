package com.sts3.board;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.sts3.sample.HomeController;
import com.util.HangulConversion;
import com.vo.MemberVO;

@Controller
@RequestMapping(value="/board")
public class BoardController {
	//Logger logger = Logger.getLogger(BoardController.class);
/*
 * Autowired 어노테이션 안에 파라미터로 required 옵션을 사용할 수 있음.
 * 디폴트는 true로 되어 있어서 만일 BoardLogic.java가 없을 경우 Exception을
 * 일으키게 됨.
 * 그러나 false를 두게 되면 해당 객체가 없더라도 Exception을 던지지 않음.
 */
	@Autowired(required=false)
	private BoardLogic boardLogic = null;
	private static final Logger logger = LoggerFactory.getLogger(BoardController.class);	
	/*
	 * @RequestParam 안에 파라미터로 required 옵션을 사용할 수 있음.
	 * 디폴트는 true로 되어 있어서 무조건 bs_file이름을 스프링이 찾게 되므로 없으면
	 * 즉 null이 들어오면 에러를 발생함.
	 * 그러나 false를 두게 되면 해당 객체가 없더라도 Exception을 던지지 않음.
	 */	
	@RequestMapping(value="boardUPD.mvc", method=RequestMethod.POST)
	public String boardUPD(@RequestParam Map<String,Object> pMap) {
		logger.info("boardUPD 호출 성공");
		int result = 0;
		result = boardLogic.boardUPD(pMap);
		String path = "";
		if(result==1) {
			path = "redirect:boardList.mvc";
		}else {
			path = "redirect:boardAddFail.jsp";			
		}
		return path;
	}
	@RequestMapping(value="boardAdd.mvc", method=RequestMethod.POST)
	public String boardAdd(@RequestParam Map<String,Object> pMap
			, @RequestParam(value="bs_file",required=false) MultipartFile bs_file) {
		logger.info("boardAdd 호출 성공");
		logger.info("bs_file:"+bs_file.getOriginalFilename());		
		//pMap.put();
		String filename =  bs_file.getOriginalFilename();
		String savePath =  "D:\\workspace_spring4\\spring5\\src\\main\\webapp\\pds";
		String fullPath = savePath+"\\"+filename;
		//첨부파일이 존재하나?
		if(!bs_file.isEmpty()) {
			try {
				File file = new File(fullPath);//파일명만 존재하고 내용은 없는
				byte[] bytes = bs_file.getBytes();
				BufferedOutputStream bos = 
						new BufferedOutputStream(new FileOutputStream(file));
				//52번에서 생성된 File객체에 내용쓰기
				bos.write(bytes);
				bos.close();
				//파일크기
				long size = file.length();
				double d_size = Math.floor(size/1024.0);
				pMap.put("bs_file",filename);
				pMap.put("bs_size",d_size);
			}catch(Exception e) {
				e.printStackTrace();
			}
		}
		int result = 0;
		result = boardLogic.boardAdd(pMap);
		String path = "";
		if(result==1) {
			path = "redirect:boardAddOk.jsp";
		}else {
			path = "redirect:boardAddFail.jsp";			
		}
		return path;
	}
	//sample/board/boardDetail.mvc?bm_no=번호 요청을 하면 응답페이지 read.jsp
	@RequestMapping(value="boardDetail.mvc", method=RequestMethod.GET)
	public String boardDetail(@RequestParam Map<String,Object> pMap,Model mod,HttpServletRequest req) {
		logger.info("boardDetail호출 성공"+pMap.get("pageNumber"));
		logger.info("boardDetail호출 성공"+pMap.get("pageSize"));
		List<Map<String,Object>> boardDetail = null;
		boardDetail=boardLogic.boardList(pMap);
		mod.addAttribute("boardDetail", boardDetail);	
		return "forward:read.jsp";
	}	
	@RequestMapping(value="updateForm.mvc", method=RequestMethod.GET)
	public String updateForm(@RequestParam Map<String,Object> pMap,Model mod,HttpServletRequest req) {
		logger.info("updateForm호출 성공"+pMap.get("pageNumber"));
		logger.info("updateForm호출 성공"+pMap.get("pageSize"));
		List<Map<String,Object>> boardDetail = null;
		boardDetail=boardLogic.boardList(pMap);
		mod.addAttribute("boardDetail", boardDetail);	
		return "forward:updateForm.jsp";
	}	
	@RequestMapping(value="boardList.mvc", method=RequestMethod.GET)
	public String boardList(@RequestParam Map<String,Object> pMap,Model mod,HttpServletRequest req) {
		logger.info("boardList호출 성공"+pMap.get("pageNumber"));
		logger.info("boardList호출 성공"+pMap.get("pageSize"));
		int tot = 0;
		tot = boardLogic.getTot(null);
		HttpSession session = req.getSession();
		session.setAttribute("s_tot", tot);
		List<Map<String,Object>> boardList = null;
		//페이지처리 초기값 담기
		int pageNumber = 0;
		int pageSize = 0;
		if(pMap.containsKey("pageNumber")) {
			pageNumber = Integer.parseInt
								(pMap.get("pageNumber").toString());
		}
		if(pMap.containsKey("pageSize")) {
			pageSize = Integer.parseInt
								(pMap.get("pageSize").toString());
		}
		logger.info(pageNumber+", "+pageSize);
		boardList=boardLogic.boardList(pMap);
		mod.addAttribute("boardList", boardList);	
		return "forward:boardListVer2.jsp";
	}
	//webapp->board아래에서 찾음
	//ViewResolver사용하지 않는 경우
	@GetMapping("boardList2")
	public String boardList2(MemberVO mVO) {
		//http://localhost:9000/sample/board/boardList.do?mem_id=test&mem_name=%EC%9D%B4%EC%88%9C%EC%8B%A0
		logger.info("boardList호출 성공"+mVO.getMem_id());
		logger.info("boardList호출 성공"+mVO.getMem_name());
		return "redirect:boardList.jsp";
	}
	//webapp->board아래에서 찾음
	//ViewResolver사용하지 않는 경우
	@PostMapping("boardList3")
	public String boardList3(Model mod) {
		List<Map<String,Object>> memList = new ArrayList<>();
		Map<String,Object> rMap = new HashMap<>();
		rMap.put("mem_id","test");
		rMap.put("mem_name","김유신");
		rMap.put("mem_address","서울시 마포구 공덕동");
		memList.add(rMap);
		rMap = new HashMap<>();
		rMap.put("mem_id","apple");
		rMap.put("mem_name","이순신");
		rMap.put("mem_address","서울시 영등포구 당산동");
		memList.add(rMap);
		rMap = new HashMap<>();
		rMap.put("mem_id","haha");
		rMap.put("mem_name","하하");
		rMap.put("mem_address","서울시 구로구 가산동");
		memList.add(rMap);	
		mod.addAttribute("memList",memList);		
		return "forward:boardList.jsp";
	}
	//WEB-INF->view->board아래에서 찾음
	//ViewResolver사용하는 경우
	public ModelAndView boardList4() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("board/boardList");
		return mav;
	}
}
